# Installation

In this chapter ... 
## Julia
Julia ist für Windows, macOS und Linux kostenlos auf der Webseite [julialang.org](https://julialang.org) verfügbar.
Unter [Downloads](https://julialang.org/downloads/)\footnote{<https://julialang.org/downloads/>} befinden sich die für die Installation notwendigen Dateien.

### Windows
Julia ist für Windows 7 und alle spätere Versionen in 32 bit und 64 bit verfügbar.
Folgende Schritte sind für die Installation erforderlich:
1. Die richtige Version (32 bit oder 64 bit) der Installationsdatei `julia.exe` herunterladen.
2. Die heruntergeladene Datei ausführen, um Julia zu entpacken.
Im entpackten Ordner befindet sich die Datei `julia`.
Diese kann entweder durch Doppelklick oder über die Commandline durch Eingabe des Befehls `julia` ausgeführt werden.
Sollte bei Aufruf in der Commandline ein Fehler \enquote{`Der Befehl "julia" ist entweder falsch geschrieben oder konnte nicht gefunden werden`} auftreten, wurde der Installationspfad wahrscheinlich bei der Installation nicht zur Systemvariable `PATH` hinzugefügt.
Windows kann die Datei `julia` dann nicht finden.
Unter diesem [Link](https://www.java.com/de/download/help/path.xml)\footnote{[https://www.java.com/de/download/help/path.xml](https://www.java.com/de/download/help/path.xml)} befindet sich eine kurze Erklärung zur Einrichtung der Systemvariable `PATH`.
Der Punkt \enquote{Geben Sie ... den Wert der Umgebungvariable PATH an.} in dieser Erklärung ist dabei folgendermaßen zu verstehen:
Unter Path sind alle Pfade gespeichert, die bei der Eingabe eines Befehls in der Commandline nach übereinstimmenden Befehlen durchsucht werden.
Die Pfade sind dabei durch Semikola `;` voneinander getrennt.
Unter diesem Punkt der Anleitung ist daher der Pfad der Julia-Installation am Ende der Variable hinzuzufügen:
```
# "Alte" Systemvariable PATH
Pfad01;Pfad02;Pfad03

# "Neue" Systemvariable PATH
Pfad01;Pfad02;Pfad03;Julia-Pfad
```

Für Windows 7 ist es zusätzlich notwendig einen Fix von Microsoft zu installieren.
Der Link zum *TLS easy fix* befindet sich in der Julia Installationsanleitung beim Unterpunkt [Windows 7 / Windows Server 2012 Installation Notes](https://julialang.org/downloads/platform/\#windows\_7\_windows\_server\_2012\_installation\_notes)\footnote{[https://julialang.org/downloads/platform/\#windows\_7\_windows\_server\_2012\_installation\_notes](https://julialang.org/downloads/platform/\#windows\_7\_windows\_server\_2012\_installation\_notes)}.
### Linux
Zur Installation von Julia auf einem Linux-Betriebssystem müssen zuerst die \enquote{Generic Binaries} für die richtige Prozessor-Architektur heruntergeladen werden.
Die Datei im `.tar.gz`-Format muss danach in einen beliebigen Ordner auf dem Computer entpackt werden.
In diesem Ordner befindet sich unter `bin/` die Datei `julia`.
Um Julia im Terminal ausführen zu können, muss gewährleistet sein, dass das System diese Datei findet.
Am einfachsten ist es, einen \enquote{Symbolic Link} in einem der Ordner unter der Systemvariable `PATH` zu erzeugen.
Welche Ordner in `PATH` hinterlegt sind, kann im Terminal mittels `echo $PATH` abgefragt werden.
Meist ist `/usr/local/bin` einer davon.
Folgender Befehl erstellt den Symbolic Link in diesem Ordner:
```
sudo ln -s <Pfad zum entpackten Ordner>/bin/julia /usr/local/bin/julia
```
Danach kann Julia durch Eingabe von `julia` im Terminal gestartet werden.

### macOS
Julia ist für macOS 10.8 und spätere Versionen verfügbar.
Für Mac-User befindet sich auf [julialang.org](https://julialang.org) unter [Downloads](https://julialang.org/downloads)\footnote{<https://julialang.org/downloads/>} eine `.dmg`-Datei zum Download.
Dieses Disk Image muss geöffnet und die darin enthaltene Datei `Julia-<version>.app` in den gewünschten Dateipfad (vozugsweise Programme) kopiert werden.
Julia kann dann direkt über diese Datei ausgeführt werden.
Um Julia im Terminal auszuführen, muss die Ausführbare Datei vom System gefunden werden können.
Dafür kann analog zu der Anleitung für Linux vorgegangen werden. Der Befehl zum Erstellen des Symbolic Link muss auf die Binary in `Julia-<verison>.app` verweisen:
```
sudo ln -s /Applications/Julia-<version>.app/Contents/Resources/julia/bin/julia /usr/local/bin/julia
```

## Visual Studio Code
Generell reicht es aus, Julia zu installieren und über die Command Line zu benutzen.
Entwicklungsumgebungen, wie z.B. *Visual Studio Code (VS Code)*, bieten allerdings viele Features, die (nicht nur) den Einstieg ins Programmieren erleichtern.
Die Installationsdateien für Windows, macOS und Linux sind kostenlos auf der Website [code.visualstudio.com](https://code.visualstudio.com)\footnote{<https://code.visualstudio.com>} erhältlich.

Nach der Installation muss in VS Code die *Julia*-Erweiterung installiert werden.
Dazu ist es erforderlich, VS Code zu öffnen und in die Erweiterungs-Ansicht zu wechseln (`Ctrl`+`Shift`+`X` oder `Cmd`+`Shift`+`X` bzw. über die Menüleiste *View*>*Extensions*).
Durch Installation der Erweiterung `Julia` (am einfachsten über die Suchleiste) kann Julia in VS Code verwendet werden.
Falls für Julia nicht der Standard-Installationspfad ausgewählt wurde, muss unter *Extension Settings* (Zahnrad bei der installierten Erweiterung) im Feld \enquote{Julia: Executable Path} der tatsächliche Dateipfad angegeben werden.

Wenn die Installation funktioniert hat, kann über den VS Code-Befehl `Julia: Start REPL` die REPL geöffnet und eine Julia-Session gestartet werden.
